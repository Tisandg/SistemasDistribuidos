/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _INTERFAZ_H_RPCGEN
#define _INTERFAZ_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAXNOM 30
#define MAXAPEL 30
#define MAXCONT 10
#define NUM_FICHAS 28

typedef struct nodo_usuario *proxNodo;

struct nodo_usuario {
	char nombres[MAXNOM];
	char apellidos[MAXAPEL];
	int login;
	char contrasena[MAXCONT];
	int permiso;
	proxNodo nodoSiguiente;
};
typedef struct nodo_usuario nodo_usuario;

struct datosValidar {
	int login;
	char contrasena[MAXCONT];
	int permiso;
};
typedef struct datosValidar datosValidar;

struct ficha {
	int lado_A;
	int lado_B;
	int id;
};
typedef struct ficha ficha;


struct fichas {
	ficha fichasJugadores[NUM_FICHAS];
};
typedef struct fichas fichas;


#define gestion_usuario 0x20000001
#define gestion_usuario_version 1

#if defined(__STDC__) || defined(__cplusplus)
#define autenticar_usuario 1
extern  bool_t * autenticar_usuario_1(datosValidar *, CLIENT *);
extern  bool_t * autenticar_usuario_1_svc(datosValidar *, struct svc_req *);
#define registrarUsuario 2
extern  bool_t * registrarusuario_1(proxNodo *, CLIENT *);
extern  bool_t * registrarusuario_1_svc(proxNodo *, struct svc_req *);
#define listarUsuarios 3
extern  proxNodo * listarusuarios_1(void *, CLIENT *);
extern  proxNodo * listarusuarios_1_svc(void *, struct svc_req *);
#define eliminar_Usuario 4
extern  bool_t * eliminar_usuario_1(datosValidar *, CLIENT *);
extern  bool_t * eliminar_usuario_1_svc(datosValidar *, struct svc_req *);
#define modificar_usuario 5
extern  bool_t * modificar_usuario_1(proxNodo *, CLIENT *);
extern  bool_t * modificar_usuario_1_svc(proxNodo *, struct svc_req *);
#define consultarUsuario 6
extern  nodo_usuario * consultarusuario_1(datosValidar *, CLIENT *);
extern  nodo_usuario * consultarusuario_1_svc(datosValidar *, struct svc_req *);
#define repartir_fichas 7
extern  fichas * repartir_fichas_1(int *, CLIENT *);
extern  fichas * repartir_fichas_1_svc(int *, struct svc_req *);
#define empezar_partida 8
extern  fichas * empezar_partida_1(void *, CLIENT *);
extern  fichas * empezar_partida_1_svc(void *, struct svc_req *);
#define enviar_jugada 9
extern  fichas * enviar_jugada_1(int *, CLIENT *);
extern  fichas * enviar_jugada_1_svc(int *, struct svc_req *);
#define estado_tablero 10
extern  fichas * estado_tablero_1(void *, CLIENT *);
extern  fichas * estado_tablero_1_svc(void *, struct svc_req *);
#define estado_cliente 11
extern  fichas * estado_cliente_1(void *, CLIENT *);
extern  fichas * estado_cliente_1_svc(void *, struct svc_req *);
#define contar_puntos 12
extern  int * contar_puntos_1(void *, CLIENT *);
extern  int * contar_puntos_1_svc(void *, struct svc_req *);
#define consultar_estadisticas 13
extern  char ** consultar_estadisticas_1(void *, CLIENT *);
extern  char ** consultar_estadisticas_1_svc(void *, struct svc_req *);
#define salir 14
extern  bool_t * salir_1(void *, CLIENT *);
extern  bool_t * salir_1_svc(void *, struct svc_req *);
extern int gestion_usuario_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define autenticar_usuario 1
extern  bool_t * autenticar_usuario_1();
extern  bool_t * autenticar_usuario_1_svc();
#define registrarUsuario 2
extern  bool_t * registrarusuario_1();
extern  bool_t * registrarusuario_1_svc();
#define listarUsuarios 3
extern  proxNodo * listarusuarios_1();
extern  proxNodo * listarusuarios_1_svc();
#define eliminar_Usuario 4
extern  bool_t * eliminar_usuario_1();
extern  bool_t * eliminar_usuario_1_svc();
#define modificar_usuario 5
extern  bool_t * modificar_usuario_1();
extern  bool_t * modificar_usuario_1_svc();
#define consultarUsuario 6
extern  nodo_usuario * consultarusuario_1();
extern  nodo_usuario * consultarusuario_1_svc();
#define repartir_fichas 7
extern  fichas * repartir_fichas_1();
extern  fichas * repartir_fichas_1_svc();
#define empezar_partida 8
extern  fichas * empezar_partida_1();
extern  fichas * empezar_partida_1_svc();
#define enviar_jugada 9
extern  fichas * enviar_jugada_1();
extern  fichas * enviar_jugada_1_svc();
#define estado_tablero 10
extern  fichas * estado_tablero_1();
extern  fichas * estado_tablero_1_svc();
#define estado_cliente 11
extern  fichas * estado_cliente_1();
extern  fichas * estado_cliente_1_svc();
#define contar_puntos 12
extern  int * contar_puntos_1();
extern  int * contar_puntos_1_svc();
#define consultar_estadisticas 13
extern  char ** consultar_estadisticas_1();
extern  char ** consultar_estadisticas_1_svc();
#define salir 14
extern  bool_t * salir_1();
extern  bool_t * salir_1_svc();
extern int gestion_usuario_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_proxNodo (XDR *, proxNodo*);
extern  bool_t xdr_nodo_usuario (XDR *, nodo_usuario*);
extern  bool_t xdr_datosValidar (XDR *, datosValidar*);
extern  bool_t xdr_ficha (XDR *, ficha*);
extern  bool_t xdr_ficha (XDR *, ficha*);
extern  bool_t xdr_fichas (XDR *, fichas*);
extern  bool_t xdr_fichas (XDR *, fichas*);

#else /* K&R C */
extern bool_t xdr_proxNodo ();
extern bool_t xdr_nodo_usuario ();
extern bool_t xdr_datosValidar ();
extern bool_t xdr_ficha ();
extern bool_t xdr_ficha ();
extern bool_t xdr_fichas ();
extern bool_t xdr_fichas ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_INTERFAZ_H_RPCGEN */
